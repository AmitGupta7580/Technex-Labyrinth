<!--
    ROS navigation stack with velocity smoother and safety (reactive) controller
-->
<launch>
  <!--<include file="$(find turtlebot_navigation)/launch/includes/velocity_smoother.launch.xml"/>
  <include file="$(find turtlebot_navigation)/launch/includes/safety_controller.launch.xml"/>-->

  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="husky_robot_model__base_link"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="odom_topic" default="odom" />
  <arg name="laser_topic" default="/scan" />
  <arg name="no_static_map" default="false"/>
  <arg name="custom_param_file" default="$(find solution)/param/dummy.yaml"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <!-- <rosparam file="$(find solution)/config/planner.yaml" command="load"/> -->

    <!-- observation sources located in costmap_common.yaml -->
    <!-- <rosparam file="$(find solution)/config/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find solution)/config/costmap_common.yaml" command="load" ns="local_costmap" /> -->

    <!-- local costmap, needs size -->
    <!-- <rosparam file="$(find solution)/config/costmap_local.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="10.0"/>
    <param name="local_costmap/height" value="10.0"/> -->

    <!-- static global costmap, static map provides size -->
    <!-- <rosparam file="$(find solution)/config/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/> -->
    
    <!-- global costmap with laser, for odom_navigation_demo -->
    <!-- <rosparam file="$(find solution)/config/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/> -->

    <rosparam file="$(find solution)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find solution)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find solution)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find solution)/param/global_costmap_params.yaml" command="load"/>
    <rosparam file="$(find solution)/param/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find solution)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find solution)/param/global_planner_params.yaml" command="load"/>
    <rosparam file="$(find solution)/param/navfn_global_planner_params.yaml" command="load" />
    <!-- external params file that could be loaded into the move_base namespace -->
    <rosparam file="$(arg custom_param_file)" command="load" />

    <!-- reset frame_id parameters using user input data -->
    <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="DWAPlannerROS/global_frame_id" value="$(arg odom_frame_id)"/>

    <remap from="cmd_vel" to="/cmd_vel"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="scan" to="$(arg laser_topic)"/>
  </node>
</launch>